<?xml version="1.0" encoding="US-ASCII"?>
<!--
 ! Copyright (c) 2016-2019 Red Hat, Inc.
 !
 ! Licensed under the Apache License, Version 2.0 (the "License");
 ! you may not use this file except in compliance with the License.
 ! You may obtain a copy of the License at
 !
 !     http://www.apache.org/licenses/LICENSE-2.0
 !
 ! Unless required by applicable law or agreed to in writing, software
 ! distributed under the License is distributed on an "AS IS" BASIS,
 ! WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ! See the License for the specific language governing permissions and
 ! limitations under the License.
 `-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>xmvn-parent</artifactId>
    <groupId>org.fedoraproject.xmvn</groupId>
    <version>4.0.0-SNAPSHOT</version>
    <relativePath>../xmvn-parent</relativePath>
  </parent>
  <artifactId>libs</artifactId>
  <packaging>pom</packaging>
  <name>XMvn third-party libraries</name>
  <description>
    Collection of third-party libraries which are used by XMvn, but
    are not available in Maven repositories.
  </description>
  <modules>
    <module>gradle</module>
    <module>gradle-base-services</module>
    <module>gradle-base-services-groovy</module>
    <module>gradle-core</module>
    <module>gradle-core-api</module>
    <module>gradle-model-core</module>
    <module>gradle-dependency-management</module>
    <module>gradle-resources</module>
    <module>gradle-logging</module>
  </modules>
  <dependencies>
    <dependency>
      <groupId>org.gradle</groupId>
      <artifactId>gradle</artifactId>
      <type>zip</type>
      <classifier>bin</classifier>
      <version>${gradleVersion}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <executions>
          <!-- Copy Gradle binary ZIP to target/ directory. -->
          <execution>
            <id>copy-gradle-zip</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.gradle</groupId>
                  <artifactId>gradle</artifactId>
                  <type>zip</type>
                  <classifier>bin</classifier>
                  <version>${gradleVersion}</version>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <!-- Extract JAR from Gradle binary ZIP.  Then extract its
               contents into target/classes. -->
          <execution>
            <id>extract-jar</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
		<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
                <unzip src="${project.build.directory}/dependency/gradle-${gradleVersion}-bin.zip"
		       dest="${project.build.directory}/original-jar">
                  <patternset>
                    <include name="**/${project.artifactId}-${project.version}.jar"/>
                  </patternset>
                  <regexpmapper from=".*/(.*)" to="\1"/>
                </unzip>
		<if>
		  <available file="${project.build.directory}/original-jar/${project.artifactId}-${project.version}.jar"/>
		  <then>
                    <unzip src="${project.build.directory}/original-jar/${project.artifactId}-${project.version}.jar"
			   dest="${project.build.outputDirectory}"/>
		  </then>
		</if>
              </target>
            </configuration>
	  </execution>
          <!-- Replace JAR created by maven-jar-plugin with original
               Gradle JAR extracted from Gradle binary ZIP. -->
          <execution>
            <id>replace-jar</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
		<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
		<if>
		  <available file="${project.build.directory}/original-jar/${project.artifactId}-${project.version}.jar"/>
		  <then>
                    <copy file="${project.build.directory}/original-jar/${project.artifactId}-${project.version}.jar"
			  todir="${project.build.directory}"/>
		  </then>
		</if>
              </target>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
	    <groupId>ant-contrib</groupId>
	    <artifactId>ant-contrib</artifactId>
	    <version>20020829</version>
	  </dependency>
	</dependencies>
      </plugin>
    </plugins>
  </build>
</project>
