/*-
 * Copyright (c) 2016 Red Hat, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.fedoraproject.xmvn.maven.internal;

import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;

import org.apache.maven.cli.internal.BootstrapCoreExtensionManager;
import org.apache.maven.cli.internal.extension.model.CoreExtension;
import org.apache.maven.execution.MavenExecutionRequest;
import org.apache.maven.extension.internal.CoreExtensionEntry;
import org.apache.maven.internal.aether.DefaultRepositorySystemSessionFactory;
import org.apache.maven.plugin.internal.DefaultPluginDependenciesResolver;
import org.apache.maven.plugin.internal.PluginDependenciesResolver;
import org.codehaus.plexus.DefaultPlexusContainer;
import org.codehaus.plexus.PlexusContainer;
import org.codehaus.plexus.PlexusContainerException;
import org.codehaus.plexus.component.annotations.Component;
import org.codehaus.plexus.component.annotations.Requirement;
import org.codehaus.plexus.logging.Logger;
import org.codehaus.plexus.personality.plexus.lifecycle.phase.InitializationException;

/**
 * This class serves as a substitute of Maven's BootstrapCoreExtensionManager. Its purpose is easy access to list of
 * core extensions used by Maven for dependency list generated by XMvn. Class was created with use of proxy pattern and
 * delegates all tasks back to it's parent class, but to the different instance.
 * 
 * @author Roman Vais
 */
@Component( role = BootstrapCoreExtensionManager.class )
public class XMvnCoreExtensionsManager
    extends BootstrapCoreExtensionManager
{
    private List<CoreExtension> extensions;

    private BootstrapCoreExtensionManager delegate;

    @Requirement
    private Logger log;

    @Requirement( role = PluginDependenciesResolver.class )
    private DefaultPluginDependenciesResolver pluginDependenciesResolver;

    @Requirement
    private DefaultRepositorySystemSessionFactory repositorySystemSessionFactory;

    @Requirement
    private PlexusContainer container;

    private static PlexusContainer newDummyContainer()
    {
        try
        {
            return new DefaultPlexusContainer();
        }
        catch ( PlexusContainerException e )
        {
            throw new RuntimeException( e );
        }
    }

    public XMvnCoreExtensionsManager()
    {
        super( null, null, null, newDummyContainer() );
        this.delegate = null;
        this.extensions = new LinkedList<CoreExtension>();
    }

    public void initialize()
        throws InitializationException
    {
        delegate = new BootstrapCoreExtensionManager( log, pluginDependenciesResolver, repositorySystemSessionFactory,
                                                      container );
        this.log.warn( "Core manager inicialized." );
    }

    @Override
    public List<CoreExtensionEntry> loadCoreExtensions( MavenExecutionRequest request, Set<String> providedArtifacts,
                                                        List<CoreExtension> extensions )
        throws Exception
    {
        this.extensions.addAll( extensions );
        if ( this.delegate == null )
        {
            this.initialize();
        }
        return delegate.loadCoreExtensions( request, providedArtifacts, extensions );
    }

    public List<CoreExtension> getCapturedExtensions()
    {
        return Collections.unmodifiableList( this.extensions );
    }
}
